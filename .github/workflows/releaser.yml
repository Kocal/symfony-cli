name: Release

on:
    pull_request:
    push:

permissions:
    contents: write
    id-token: write

jobs:
    releaser:
        name: Release
        runs-on: ubuntu-latest
        steps:
            -
                name: Checkout
                uses: actions/checkout@v2
                with:
                    fetch-depth: 0
            -
                name: Set up Go
                uses: actions/setup-go@v2
                with:
                    go-version: 1.17
            -
                name: Set AUTOUPDATE_CHANNEL on tags
                run: echo "AUTOUPDATE_CHANNEL=stable" >> $GITHUB_ENV
                if: startsWith(github.ref, 'refs/tags/v')
            -
                name: Prepare
                run: go generate ./
            -
                name: Check Git status
                id: git
                run: |
                    RESULT=$(git status --untracked-files=no --porcelain)
                    echo "::set-output name=gitstatus::$RESULT"
            -
                name: Check if go prepare updated generated Go code
                if: steps.git.outputs.gitstatus != ''
                run: |
                    echo '"go generate" changed some Go generated code, run "symfony cloud:self-update" then "go generate ./" locally and make a Pull Request with the changes'
                    git diff
                    exit 1
            -
                name: Test
                run: go test -v ./...
            -
                name: Set up cosign
                uses: sigstore/cosign-installer@v2.0.0
            -
                name: Run GoReleaser for snapshot
                uses: goreleaser/goreleaser-action@v2
                # only for PRs and push on branches
                if: startsWith(github.ref, 'refs/heads/')
                with:
                    version: latest
                    args: build --rm-dist --snapshot
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            -
                name: Run GoReleaser
                uses: goreleaser/goreleaser-action@v2
                # only for tags
                if: startsWith(github.ref, 'refs/tags/v')
                with:
                    version: latest
                    args: release --rm-dist
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    TAP_GITHUB_TOKEN: ${{ secrets.GH_PAT }}
            -
                name: Archive binaries
                uses: actions/upload-artifact@v2
                with:
                    retention-days: 5
                    path: dist
            -
                name: Fury Uploads
                env:
                    FURY_PUSH_TOKEN: ${{ secrets.FURY_PUSH_TOKEN }}
                if: startsWith(github.ref, 'refs/tags/v')
                run: |
                    URLS=`curl -fsSL "https://api.github.com/repos/symfony-cli/symfony-cli/releases/latest" | jq -r '.assets[] | select(.name | match("(deb|rpm)$")).browser_download_url'`
                    for URL in $URLS
                    do
                        readarray -d "/" -t arr <<< "$URL"
                        NAME=${arr[-1]}
                        curl -fsSL $URL > /tmp/$NAME
                        curl https://$FURY_PUSH_TOKEN@push.fury.io/symfony/ -F package=@/tmp/$NAME
                        unlink /tmp/$NAME
                    done
